import{_ as t,c as i,o as a,ae as n}from"./chunks/framework.BjlC_BXf.js";const E=JSON.parse('{"title":"API 文档","description":"","frontmatter":{},"headers":[],"relativePath":"home/api-docs.md","filePath":"home/api-docs.md"}'),e={name:"home/api-docs.md"};function h(p,s,l,d,k,o){return a(),i("div",null,s[0]||(s[0]=[n(`<h1 id="api-文档" tabindex="-1">API 文档 <a class="header-anchor" href="#api-文档" aria-label="Permalink to &quot;API 文档&quot;">​</a></h1><blockquote><p>📚 ZE题库API接口的具体说明</p></blockquote><h2 id="接口详情" tabindex="-1">接口详情 <a class="header-anchor" href="#接口详情" aria-label="Permalink to &quot;接口详情&quot;">​</a></h2><h3 id="查询题目答案" tabindex="-1">查询题目答案 <a class="header-anchor" href="#查询题目答案" aria-label="Permalink to &quot;查询题目答案&quot;">​</a></h3><p><strong>接口地址</strong>: <code>https://api.zaizhexue.top/api/query</code></p><p><strong>请求方式</strong>: GET / POST</p><ul><li><strong>响应格式</strong>: JSON</li></ul><h4 id="get-请求方式" tabindex="-1">GET 请求方式 <a class="header-anchor" href="#get-请求方式" aria-label="Permalink to &quot;GET 请求方式&quot;">​</a></h4><p><strong>请求参数</strong>:</p><table tabindex="0"><thead><tr><th>参数名</th><th>类型</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>token</td><td>string</td><td>是</td><td>用户认证令牌</td></tr><tr><td>title</td><td>string</td><td>是</td><td>题目标题</td></tr><tr><td>options</td><td>string</td><td>否</td><td>题目选项，多选题时使用</td></tr><tr><td>type</td><td>string</td><td>否</td><td>题目类型标识</td></tr></tbody></table><p><strong>请求示例</strong>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>GET https://api.zaizhexue.top/api/query?token=your_token&amp;title=题目内容&amp;options=选项内容&amp;type=题目类型</span></span></code></pre></div><h4 id="post-请求方式" tabindex="-1">POST 请求方式 <a class="header-anchor" href="#post-请求方式" aria-label="Permalink to &quot;POST 请求方式&quot;">​</a></h4><p><strong>请求头</strong>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Content-Type: application/json</span></span>
<span class="line"><span>Authorization: Bearer your_token_here</span></span></code></pre></div><p><strong>请求参数</strong> (JSON格式):</p><table tabindex="0"><thead><tr><th>参数名</th><th>类型</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>title</td><td>string</td><td>是</td><td>题目标题/问题内容</td></tr><tr><td>options</td><td>string</td><td>否</td><td>题目选项，多选题时使用</td></tr><tr><td>type</td><td>string</td><td>否</td><td>题目类型标识</td></tr></tbody></table><p><strong>请求示例</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> POST</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://api.zaizhexue.top/api/query</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Content-Type: application/json&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Authorization: Bearer your_token_here&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;title=题目内容&amp;options=选项内容&amp;type=题目类型&quot;</span></span></code></pre></div><p><strong>响应格式</strong>:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;data&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;code&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;data&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;答案内容&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;msg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;来自题库。。。&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;success&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><strong>响应参数说明</strong>:</p><table tabindex="0"><thead><tr><th>参数名</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>success</td><td>boolean</td><td>请求是否成功，一般不用管</td></tr><tr><td>data.code</td><td>integer</td><td>状态码，1表示找到答案，0表示未找到答案或token无效</td></tr><tr><td>data.data</td><td>string</td><td>答案内容，多个答案用#分隔</td></tr><tr><td>data.msg</td><td>string</td><td>额外信息</td></tr></tbody></table><h2 id="使用限制" tabindex="-1">使用限制 <a class="header-anchor" href="#使用限制" aria-label="Permalink to &quot;使用限制&quot;">​</a></h2><ul><li><strong>请求频率</strong>: 暂无限制</li><li><strong>Token有效期</strong>: 在手动重置前无限期</li></ul><h2 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h2><h3 id="q-如何获取token" tabindex="-1">Q: 如何获取Token？ <a class="header-anchor" href="#q-如何获取token" aria-label="Permalink to &quot;Q: 如何获取Token？&quot;">​</a></h3><p>A: 访问<a href="https://tiku.zerror.cc" target="_blank" rel="noreferrer">ZError</a>并登录，在<code>我的&gt;题库配置</code>页可以查看到。</p><h3 id="q-答案格式是什么" tabindex="-1">Q: 答案格式是什么？ <a class="header-anchor" href="#q-答案格式是什么" aria-label="Permalink to &quot;Q: 答案格式是什么？&quot;">​</a></h3><p>A: 多个答案用 <code>#</code> 分隔，例如：<code>答案1#答案2#答案3</code></p><h2 id="ocs题库配置" tabindex="-1">OCS题库配置 <a class="header-anchor" href="#ocs题库配置" aria-label="Permalink to &quot;OCS题库配置&quot;">​</a></h2><p>以下是用于OCS题库的完整配置JSON格式：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ZE题库&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;homepage&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://tiku.zerror.cc/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;url&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://api.zaizhexue.top/api/query&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;method&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;post&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;GM_xmlhttpRequest&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;data&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;title&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;\${title}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;options&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;\${options}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;\${type}&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;headers&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;Content-Type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;application/json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;Authorization&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Bearer your_token_here&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;handler&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;return (res)=&gt;res.data.code === 0 ? [res.data.msg, undefined] : [undefined,res.data.data]&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">配置说明</p><ul><li>将 <code>your_token_here</code> 替换为您的实际API令牌</li><li>POST方式使用Bearer认证，GET方式将token作为参数传递</li><li>handler函数处理不同的响应格式</li></ul></div><hr><p><em>最后更新时间: 2025-06-12</em></p>`,36)]))}const g=t(e,[["render",h]]);export{E as __pageData,g as default};
